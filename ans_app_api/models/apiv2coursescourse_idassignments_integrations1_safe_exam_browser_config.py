# coding: utf-8

"""
    API V2

    #### Authorization The API can only be accessed by creating a token at: [https://ans.app/users/tokens](https://ans.app/users/tokens).<br> The provided token is a Bearer token and needs to be set in the Request Header with key Authorization and value \"Bearer [token]\" for every request.<br>  #### Pagination The API generates several headers due to its use of pagination, this includes:      - Link, the standard link header defined in RFC 8288     - Current-Page, which shows the current page of the requested data     - Page-Items, which shows the amount of items per page     - Total-Pages, which shows the total amount of pages available     - Total-Count, which shows the total count of objects that was requested  #### Rate Limits The API enforces a rate limit of 500 request per minute per ip-address. If the rate limit is exceeded, the API responds with a HTTP 429 Too Many Requests response code.<br> You can use the following response headers to confirm the current rate limit and monitor the number of requests remaining in the current minute.<br>      - RateLimit-Limit, the current limit for your account     - RateLimit-Remaining, the number of remaining requests in the current minute     - RateLimit-Reset, the number of seconds until the limit is reset  #### Search The API offers search functionality through GET requests with a query. For all search endpoints see the [Search](#/Search) section.<br>      - The query must consist of the attribute and the search value connected with a colon (:) or a greater than (>) or smaller than (<) sign.     - You can use the greater and smaller than symbols for numeric and date values.     - If your search value contains whitespaces, you must quote your search query with single or double quotes.     - You can also combine searches by using a whitespace to separate the attributes.     - If your search value is equal to \"null\", all records with null values for that attribute will be found.     - We perform case sensitive exact match searches only.     - You can search for multiple values, by adding square brackets around the search parameters and seperating the parameters using commas without spaces.     - You can see some example queries in the documented search endpoints.   #### Webhooks The API offers you the ability to listen to specific events that occur within the application. For example, you can use webhooks to:      - Archive results when an assignment is archived     - Add users after an assignment is created     - Export a result after it has been approved  When creating a webhook you can specify which events you want to listen to. You can listen to all events, all events for a specific object or only one event for an object.<br> You can listen to 'create', 'update' and 'destroy' events on an object or a combination for example:      - '*' - all events for all objects     - 'assignment' - All events for an assignment     - 'assignment.update' - Only notify when an assignment is updated  The webhooks API returns a secret after creating a new webhook. This secret can be used to verify that the webhook call comes from Ans by creating a sha256 HMAC with the request body and this secret and comparing it to the X-Ans-Signature Header.<br>  Webhook requests are automatically retried up to five times if the endpoint returns certain HTTP response codes. The time interval between retries is gradually extended. Every webhook event is logged and contains the response code, headers and body of the response for debugging purposes.<br>  The following objects are currently supported:      - Assignment     - Result     - User   # noqa: E501

    OpenAPI spec version: v2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'enable_f1': 'bool',
        'enable_f2': 'bool',
        'enable_f3': 'bool',
        'enable_f4': 'bool',
        'enable_f5': 'bool',
        'enable_f6': 'bool',
        'enable_f7': 'bool',
        'enable_f8': 'bool',
        'enable_f9': 'bool',
        'show_time': 'bool',
        'allow_quit': 'bool',
        'enable_esc': 'bool',
        'enable_f10': 'bool',
        'enable_f11': 'bool',
        'enable_f12': 'bool',
        'enable_alt_f4': 'bool',
        'show_task_bar': 'bool',
        'enable_alt_esc': 'bool',
        'enable_alt_tab': 'bool',
        'quit_password': 'str',
        'enable_ctrl_esc': 'bool',
        'allow_dictation': 'bool',
        'show_quit_button': 'bool',
        'browser_view_mode': 'OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigBrowserViewMode',
        'allow_down_uploads': 'bool',
        'enable_right_mouse': 'bool',
        'show_reload_button': 'bool',
        'enable_print_screen': 'bool',
        'show_input_language': 'bool',
        'enable_alt_mouse_wheel': 'bool',
        'download_directory_osx': 'str',
        'download_directory_win': 'str',
        'show_scan_qr_code_button': 'bool',
        'show_scroll_lock_button': 'bool',
        'show_back_to_start_button': 'bool',
        'show_navigation_buttons': 'bool',
        'choose_file_to_upload_policy': 'OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigChooseFileToUploadPolicy',
        'new_browser_window_by_link_policy': 'OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigNewBrowserWindowByLinkPolicy',
        'permitted_processes': 'list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigPermittedProcesses]',
        'prohibited_processes': 'list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigProhibitedProcesses]',
        'url_filter_rules': 'list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigURLFilterRules]'
    }

    attribute_map = {
        'enable_f1': 'enableF1',
        'enable_f2': 'enableF2',
        'enable_f3': 'enableF3',
        'enable_f4': 'enableF4',
        'enable_f5': 'enableF5',
        'enable_f6': 'enableF6',
        'enable_f7': 'enableF7',
        'enable_f8': 'enableF8',
        'enable_f9': 'enableF9',
        'show_time': 'showTime',
        'allow_quit': 'allowQuit',
        'enable_esc': 'enableEsc',
        'enable_f10': 'enableF10',
        'enable_f11': 'enableF11',
        'enable_f12': 'enableF12',
        'enable_alt_f4': 'enableAltF4',
        'show_task_bar': 'showTaskBar',
        'enable_alt_esc': 'enableAltEsc',
        'enable_alt_tab': 'enableAltTab',
        'quit_password': 'quitPassword',
        'enable_ctrl_esc': 'enableCtrlEsc',
        'allow_dictation': 'allowDictation',
        'show_quit_button': 'showQuitButton',
        'browser_view_mode': 'browserViewMode',
        'allow_down_uploads': 'allowDownUploads',
        'enable_right_mouse': 'enableRightMouse',
        'show_reload_button': 'showReloadButton',
        'enable_print_screen': 'enablePrintScreen',
        'show_input_language': 'showInputLanguage',
        'enable_alt_mouse_wheel': 'enableAltMouseWheel',
        'download_directory_osx': 'downloadDirectoryOSX',
        'download_directory_win': 'downloadDirectoryWin',
        'show_scan_qr_code_button': 'showScanQRCodeButton',
        'show_scroll_lock_button': 'showScrollLockButton',
        'show_back_to_start_button': 'showBackToStartButton',
        'show_navigation_buttons': 'showNavigationButtons',
        'choose_file_to_upload_policy': 'chooseFileToUploadPolicy',
        'new_browser_window_by_link_policy': 'newBrowserWindowByLinkPolicy',
        'permitted_processes': 'permittedProcesses',
        'prohibited_processes': 'prohibitedProcesses',
        'url_filter_rules': 'URLFilterRules'
    }

    def __init__(self, enable_f1=False, enable_f2=False, enable_f3=False, enable_f4=False, enable_f5=False, enable_f6=False, enable_f7=False, enable_f8=False, enable_f9=False, show_time=False, allow_quit=False, enable_esc=False, enable_f10=False, enable_f11=False, enable_f12=False, enable_alt_f4=False, show_task_bar=False, enable_alt_esc=False, enable_alt_tab=False, quit_password=None, enable_ctrl_esc=False, allow_dictation=False, show_quit_button=False, browser_view_mode=None, allow_down_uploads=False, enable_right_mouse=False, show_reload_button=False, enable_print_screen=False, show_input_language=False, enable_alt_mouse_wheel=False, download_directory_osx='/Users/username/Downloads', download_directory_win='Downloads', show_scan_qr_code_button=False, show_scroll_lock_button=False, show_back_to_start_button=False, show_navigation_buttons=False, choose_file_to_upload_policy=None, new_browser_window_by_link_policy=None, permitted_processes=None, prohibited_processes=None, url_filter_rules=None):  # noqa: E501
        """Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig - a model defined in Swagger"""  # noqa: E501
        self._enable_f1 = None
        self._enable_f2 = None
        self._enable_f3 = None
        self._enable_f4 = None
        self._enable_f5 = None
        self._enable_f6 = None
        self._enable_f7 = None
        self._enable_f8 = None
        self._enable_f9 = None
        self._show_time = None
        self._allow_quit = None
        self._enable_esc = None
        self._enable_f10 = None
        self._enable_f11 = None
        self._enable_f12 = None
        self._enable_alt_f4 = None
        self._show_task_bar = None
        self._enable_alt_esc = None
        self._enable_alt_tab = None
        self._quit_password = None
        self._enable_ctrl_esc = None
        self._allow_dictation = None
        self._show_quit_button = None
        self._browser_view_mode = None
        self._allow_down_uploads = None
        self._enable_right_mouse = None
        self._show_reload_button = None
        self._enable_print_screen = None
        self._show_input_language = None
        self._enable_alt_mouse_wheel = None
        self._download_directory_osx = None
        self._download_directory_win = None
        self._show_scan_qr_code_button = None
        self._show_scroll_lock_button = None
        self._show_back_to_start_button = None
        self._show_navigation_buttons = None
        self._choose_file_to_upload_policy = None
        self._new_browser_window_by_link_policy = None
        self._permitted_processes = None
        self._prohibited_processes = None
        self._url_filter_rules = None
        self.discriminator = None
        if enable_f1 is not None:
            self.enable_f1 = enable_f1
        if enable_f2 is not None:
            self.enable_f2 = enable_f2
        if enable_f3 is not None:
            self.enable_f3 = enable_f3
        if enable_f4 is not None:
            self.enable_f4 = enable_f4
        if enable_f5 is not None:
            self.enable_f5 = enable_f5
        if enable_f6 is not None:
            self.enable_f6 = enable_f6
        if enable_f7 is not None:
            self.enable_f7 = enable_f7
        if enable_f8 is not None:
            self.enable_f8 = enable_f8
        if enable_f9 is not None:
            self.enable_f9 = enable_f9
        if show_time is not None:
            self.show_time = show_time
        if allow_quit is not None:
            self.allow_quit = allow_quit
        if enable_esc is not None:
            self.enable_esc = enable_esc
        if enable_f10 is not None:
            self.enable_f10 = enable_f10
        if enable_f11 is not None:
            self.enable_f11 = enable_f11
        if enable_f12 is not None:
            self.enable_f12 = enable_f12
        if enable_alt_f4 is not None:
            self.enable_alt_f4 = enable_alt_f4
        if show_task_bar is not None:
            self.show_task_bar = show_task_bar
        if enable_alt_esc is not None:
            self.enable_alt_esc = enable_alt_esc
        if enable_alt_tab is not None:
            self.enable_alt_tab = enable_alt_tab
        if quit_password is not None:
            self.quit_password = quit_password
        if enable_ctrl_esc is not None:
            self.enable_ctrl_esc = enable_ctrl_esc
        if allow_dictation is not None:
            self.allow_dictation = allow_dictation
        if show_quit_button is not None:
            self.show_quit_button = show_quit_button
        if browser_view_mode is not None:
            self.browser_view_mode = browser_view_mode
        if allow_down_uploads is not None:
            self.allow_down_uploads = allow_down_uploads
        if enable_right_mouse is not None:
            self.enable_right_mouse = enable_right_mouse
        if show_reload_button is not None:
            self.show_reload_button = show_reload_button
        if enable_print_screen is not None:
            self.enable_print_screen = enable_print_screen
        if show_input_language is not None:
            self.show_input_language = show_input_language
        if enable_alt_mouse_wheel is not None:
            self.enable_alt_mouse_wheel = enable_alt_mouse_wheel
        if download_directory_osx is not None:
            self.download_directory_osx = download_directory_osx
        if download_directory_win is not None:
            self.download_directory_win = download_directory_win
        if show_scan_qr_code_button is not None:
            self.show_scan_qr_code_button = show_scan_qr_code_button
        if show_scroll_lock_button is not None:
            self.show_scroll_lock_button = show_scroll_lock_button
        if show_back_to_start_button is not None:
            self.show_back_to_start_button = show_back_to_start_button
        if show_navigation_buttons is not None:
            self.show_navigation_buttons = show_navigation_buttons
        if choose_file_to_upload_policy is not None:
            self.choose_file_to_upload_policy = choose_file_to_upload_policy
        if new_browser_window_by_link_policy is not None:
            self.new_browser_window_by_link_policy = new_browser_window_by_link_policy
        if permitted_processes is not None:
            self.permitted_processes = permitted_processes
        if prohibited_processes is not None:
            self.prohibited_processes = prohibited_processes
        if url_filter_rules is not None:
            self.url_filter_rules = url_filter_rules

    @property
    def enable_f1(self):
        """Gets the enable_f1 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F1  # noqa: E501

        :return: The enable_f1 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f1

    @enable_f1.setter
    def enable_f1(self, enable_f1):
        """Sets the enable_f1 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F1  # noqa: E501

        :param enable_f1: The enable_f1 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f1 = enable_f1

    @property
    def enable_f2(self):
        """Gets the enable_f2 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F2  # noqa: E501

        :return: The enable_f2 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f2

    @enable_f2.setter
    def enable_f2(self, enable_f2):
        """Sets the enable_f2 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F2  # noqa: E501

        :param enable_f2: The enable_f2 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f2 = enable_f2

    @property
    def enable_f3(self):
        """Gets the enable_f3 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F3  # noqa: E501

        :return: The enable_f3 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f3

    @enable_f3.setter
    def enable_f3(self, enable_f3):
        """Sets the enable_f3 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F3  # noqa: E501

        :param enable_f3: The enable_f3 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f3 = enable_f3

    @property
    def enable_f4(self):
        """Gets the enable_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F4  # noqa: E501

        :return: The enable_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f4

    @enable_f4.setter
    def enable_f4(self, enable_f4):
        """Sets the enable_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F4  # noqa: E501

        :param enable_f4: The enable_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f4 = enable_f4

    @property
    def enable_f5(self):
        """Gets the enable_f5 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F5  # noqa: E501

        :return: The enable_f5 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f5

    @enable_f5.setter
    def enable_f5(self, enable_f5):
        """Sets the enable_f5 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F5  # noqa: E501

        :param enable_f5: The enable_f5 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f5 = enable_f5

    @property
    def enable_f6(self):
        """Gets the enable_f6 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F6  # noqa: E501

        :return: The enable_f6 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f6

    @enable_f6.setter
    def enable_f6(self, enable_f6):
        """Sets the enable_f6 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F6  # noqa: E501

        :param enable_f6: The enable_f6 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f6 = enable_f6

    @property
    def enable_f7(self):
        """Gets the enable_f7 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F7  # noqa: E501

        :return: The enable_f7 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f7

    @enable_f7.setter
    def enable_f7(self, enable_f7):
        """Sets the enable_f7 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F7  # noqa: E501

        :param enable_f7: The enable_f7 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f7 = enable_f7

    @property
    def enable_f8(self):
        """Gets the enable_f8 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F8  # noqa: E501

        :return: The enable_f8 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f8

    @enable_f8.setter
    def enable_f8(self, enable_f8):
        """Sets the enable_f8 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F8  # noqa: E501

        :param enable_f8: The enable_f8 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f8 = enable_f8

    @property
    def enable_f9(self):
        """Gets the enable_f9 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F9  # noqa: E501

        :return: The enable_f9 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f9

    @enable_f9.setter
    def enable_f9(self, enable_f9):
        """Sets the enable_f9 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F9  # noqa: E501

        :param enable_f9: The enable_f9 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f9 = enable_f9

    @property
    def show_time(self):
        """Gets the show_time of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the time on the taskbar/dock  # noqa: E501

        :return: The show_time of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_time

    @show_time.setter
    def show_time(self, show_time):
        """Sets the show_time of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the time on the taskbar/dock  # noqa: E501

        :param show_time: The show_time of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_time = show_time

    @property
    def allow_quit(self):
        """Gets the allow_quit of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Allows the user to quit the Safe Exam Browser  # noqa: E501

        :return: The allow_quit of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._allow_quit

    @allow_quit.setter
    def allow_quit(self, allow_quit):
        """Sets the allow_quit of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Allows the user to quit the Safe Exam Browser  # noqa: E501

        :param allow_quit: The allow_quit of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._allow_quit = allow_quit

    @property
    def enable_esc(self):
        """Gets the enable_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the Escape key  # noqa: E501

        :return: The enable_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_esc

    @enable_esc.setter
    def enable_esc(self, enable_esc):
        """Sets the enable_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the Escape key  # noqa: E501

        :param enable_esc: The enable_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_esc = enable_esc

    @property
    def enable_f10(self):
        """Gets the enable_f10 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F10  # noqa: E501

        :return: The enable_f10 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f10

    @enable_f10.setter
    def enable_f10(self, enable_f10):
        """Sets the enable_f10 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F10  # noqa: E501

        :param enable_f10: The enable_f10 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f10 = enable_f10

    @property
    def enable_f11(self):
        """Gets the enable_f11 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F11  # noqa: E501

        :return: The enable_f11 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f11

    @enable_f11.setter
    def enable_f11(self, enable_f11):
        """Sets the enable_f11 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F11  # noqa: E501

        :param enable_f11: The enable_f11 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f11 = enable_f11

    @property
    def enable_f12(self):
        """Gets the enable_f12 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the F12  # noqa: E501

        :return: The enable_f12 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_f12

    @enable_f12.setter
    def enable_f12(self, enable_f12):
        """Sets the enable_f12 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the F12  # noqa: E501

        :param enable_f12: The enable_f12 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_f12 = enable_f12

    @property
    def enable_alt_f4(self):
        """Gets the enable_alt_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the Alt + F4 key combination  # noqa: E501

        :return: The enable_alt_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_alt_f4

    @enable_alt_f4.setter
    def enable_alt_f4(self, enable_alt_f4):
        """Sets the enable_alt_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the Alt + F4 key combination  # noqa: E501

        :param enable_alt_f4: The enable_alt_f4 of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_alt_f4 = enable_alt_f4

    @property
    def show_task_bar(self):
        """Gets the show_task_bar of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the taskbar/dock of the safe exam browser  # noqa: E501

        :return: The show_task_bar of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_task_bar

    @show_task_bar.setter
    def show_task_bar(self, show_task_bar):
        """Sets the show_task_bar of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the taskbar/dock of the safe exam browser  # noqa: E501

        :param show_task_bar: The show_task_bar of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_task_bar = show_task_bar

    @property
    def enable_alt_esc(self):
        """Gets the enable_alt_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the Alt + Escape key combination  # noqa: E501

        :return: The enable_alt_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_alt_esc

    @enable_alt_esc.setter
    def enable_alt_esc(self, enable_alt_esc):
        """Sets the enable_alt_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the Alt + Escape key combination  # noqa: E501

        :param enable_alt_esc: The enable_alt_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_alt_esc = enable_alt_esc

    @property
    def enable_alt_tab(self):
        """Gets the enable_alt_tab of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the Alt + Tab key combination  # noqa: E501

        :return: The enable_alt_tab of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_alt_tab

    @enable_alt_tab.setter
    def enable_alt_tab(self, enable_alt_tab):
        """Sets the enable_alt_tab of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the Alt + Tab key combination  # noqa: E501

        :param enable_alt_tab: The enable_alt_tab of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_alt_tab = enable_alt_tab

    @property
    def quit_password(self):
        """Gets the quit_password of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        The password used to quit the Safe Exam Browser  # noqa: E501

        :return: The quit_password of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: str
        """
        return self._quit_password

    @quit_password.setter
    def quit_password(self, quit_password):
        """Sets the quit_password of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        The password used to quit the Safe Exam Browser  # noqa: E501

        :param quit_password: The quit_password of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: str
        """

        self._quit_password = quit_password

    @property
    def enable_ctrl_esc(self):
        """Gets the enable_ctrl_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the Control + Escape key combination  # noqa: E501

        :return: The enable_ctrl_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_ctrl_esc

    @enable_ctrl_esc.setter
    def enable_ctrl_esc(self, enable_ctrl_esc):
        """Sets the enable_ctrl_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the Control + Escape key combination  # noqa: E501

        :param enable_ctrl_esc: The enable_ctrl_esc of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_ctrl_esc = enable_ctrl_esc

    @property
    def allow_dictation(self):
        """Gets the allow_dictation of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Allows text to speech (Mac only)  # noqa: E501

        :return: The allow_dictation of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._allow_dictation

    @allow_dictation.setter
    def allow_dictation(self, allow_dictation):
        """Sets the allow_dictation of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Allows text to speech (Mac only)  # noqa: E501

        :param allow_dictation: The allow_dictation of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._allow_dictation = allow_dictation

    @property
    def show_quit_button(self):
        """Gets the show_quit_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the quit button for students to exit the Safe Exam Browser  # noqa: E501

        :return: The show_quit_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_quit_button

    @show_quit_button.setter
    def show_quit_button(self, show_quit_button):
        """Sets the show_quit_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the quit button for students to exit the Safe Exam Browser  # noqa: E501

        :param show_quit_button: The show_quit_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_quit_button = show_quit_button

    @property
    def browser_view_mode(self):
        """Gets the browser_view_mode of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501


        :return: The browser_view_mode of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigBrowserViewMode
        """
        return self._browser_view_mode

    @browser_view_mode.setter
    def browser_view_mode(self, browser_view_mode):
        """Sets the browser_view_mode of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.


        :param browser_view_mode: The browser_view_mode of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigBrowserViewMode
        """

        self._browser_view_mode = browser_view_mode

    @property
    def allow_down_uploads(self):
        """Gets the allow_down_uploads of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Allows students to download and upload files during an assignment  # noqa: E501

        :return: The allow_down_uploads of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._allow_down_uploads

    @allow_down_uploads.setter
    def allow_down_uploads(self, allow_down_uploads):
        """Sets the allow_down_uploads of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Allows students to download and upload files during an assignment  # noqa: E501

        :param allow_down_uploads: The allow_down_uploads of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._allow_down_uploads = allow_down_uploads

    @property
    def enable_right_mouse(self):
        """Gets the enable_right_mouse of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the right mouse clicks  # noqa: E501

        :return: The enable_right_mouse of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_right_mouse

    @enable_right_mouse.setter
    def enable_right_mouse(self, enable_right_mouse):
        """Sets the enable_right_mouse of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the right mouse clicks  # noqa: E501

        :param enable_right_mouse: The enable_right_mouse of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_right_mouse = enable_right_mouse

    @property
    def show_reload_button(self):
        """Gets the show_reload_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the reload button on the taskbar/dock   # noqa: E501

        :return: The show_reload_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_reload_button

    @show_reload_button.setter
    def show_reload_button(self, show_reload_button):
        """Sets the show_reload_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the reload button on the taskbar/dock   # noqa: E501

        :param show_reload_button: The show_reload_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_reload_button = show_reload_button

    @property
    def enable_print_screen(self):
        """Gets the enable_print_screen of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the the Print Screen button  # noqa: E501

        :return: The enable_print_screen of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_print_screen

    @enable_print_screen.setter
    def enable_print_screen(self, enable_print_screen):
        """Sets the enable_print_screen of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the the Print Screen button  # noqa: E501

        :param enable_print_screen: The enable_print_screen of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_print_screen = enable_print_screen

    @property
    def show_input_language(self):
        """Gets the show_input_language of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables changing the keyboard language (Windows only)  # noqa: E501

        :return: The show_input_language of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_input_language

    @show_input_language.setter
    def show_input_language(self, show_input_language):
        """Sets the show_input_language of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables changing the keyboard language (Windows only)  # noqa: E501

        :param show_input_language: The show_input_language of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_input_language = show_input_language

    @property
    def enable_alt_mouse_wheel(self):
        """Gets the enable_alt_mouse_wheel of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Enables the use of the Alt + mouse wheel combination  # noqa: E501

        :return: The enable_alt_mouse_wheel of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._enable_alt_mouse_wheel

    @enable_alt_mouse_wheel.setter
    def enable_alt_mouse_wheel(self, enable_alt_mouse_wheel):
        """Sets the enable_alt_mouse_wheel of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Enables the use of the Alt + mouse wheel combination  # noqa: E501

        :param enable_alt_mouse_wheel: The enable_alt_mouse_wheel of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._enable_alt_mouse_wheel = enable_alt_mouse_wheel

    @property
    def download_directory_osx(self):
        """Gets the download_directory_osx of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Sets the directory to where files will be downloaded on MacOS  # noqa: E501

        :return: The download_directory_osx of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: str
        """
        return self._download_directory_osx

    @download_directory_osx.setter
    def download_directory_osx(self, download_directory_osx):
        """Sets the download_directory_osx of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Sets the directory to where files will be downloaded on MacOS  # noqa: E501

        :param download_directory_osx: The download_directory_osx of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: str
        """

        self._download_directory_osx = download_directory_osx

    @property
    def download_directory_win(self):
        """Gets the download_directory_win of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Sets the directory to where files will be downloaded on MacOS  # noqa: E501

        :return: The download_directory_win of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: str
        """
        return self._download_directory_win

    @download_directory_win.setter
    def download_directory_win(self, download_directory_win):
        """Sets the download_directory_win of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Sets the directory to where files will be downloaded on MacOS  # noqa: E501

        :param download_directory_win: The download_directory_win of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: str
        """

        self._download_directory_win = download_directory_win

    @property
    def show_scan_qr_code_button(self):
        """Gets the show_scan_qr_code_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the scan QR code button  # noqa: E501

        :return: The show_scan_qr_code_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_scan_qr_code_button

    @show_scan_qr_code_button.setter
    def show_scan_qr_code_button(self, show_scan_qr_code_button):
        """Sets the show_scan_qr_code_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the scan QR code button  # noqa: E501

        :param show_scan_qr_code_button: The show_scan_qr_code_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_scan_qr_code_button = show_scan_qr_code_button

    @property
    def show_scroll_lock_button(self):
        """Gets the show_scroll_lock_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the scroll lock button in the taskbar/dock  # noqa: E501

        :return: The show_scroll_lock_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_scroll_lock_button

    @show_scroll_lock_button.setter
    def show_scroll_lock_button(self, show_scroll_lock_button):
        """Sets the show_scroll_lock_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the scroll lock button in the taskbar/dock  # noqa: E501

        :param show_scroll_lock_button: The show_scroll_lock_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_scroll_lock_button = show_scroll_lock_button

    @property
    def show_back_to_start_button(self):
        """Gets the show_back_to_start_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the back to start button on the taskbard/dock  # noqa: E501

        :return: The show_back_to_start_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_back_to_start_button

    @show_back_to_start_button.setter
    def show_back_to_start_button(self, show_back_to_start_button):
        """Sets the show_back_to_start_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the back to start button on the taskbard/dock  # noqa: E501

        :param show_back_to_start_button: The show_back_to_start_button of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_back_to_start_button = show_back_to_start_button

    @property
    def show_navigation_buttons(self):
        """Gets the show_navigation_buttons of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501

        Displays the page navigation buttons on the taskbar/dock  # noqa: E501

        :return: The show_navigation_buttons of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: bool
        """
        return self._show_navigation_buttons

    @show_navigation_buttons.setter
    def show_navigation_buttons(self, show_navigation_buttons):
        """Sets the show_navigation_buttons of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.

        Displays the page navigation buttons on the taskbar/dock  # noqa: E501

        :param show_navigation_buttons: The show_navigation_buttons of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: bool
        """

        self._show_navigation_buttons = show_navigation_buttons

    @property
    def choose_file_to_upload_policy(self):
        """Gets the choose_file_to_upload_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501


        :return: The choose_file_to_upload_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigChooseFileToUploadPolicy
        """
        return self._choose_file_to_upload_policy

    @choose_file_to_upload_policy.setter
    def choose_file_to_upload_policy(self, choose_file_to_upload_policy):
        """Sets the choose_file_to_upload_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.


        :param choose_file_to_upload_policy: The choose_file_to_upload_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigChooseFileToUploadPolicy
        """

        self._choose_file_to_upload_policy = choose_file_to_upload_policy

    @property
    def new_browser_window_by_link_policy(self):
        """Gets the new_browser_window_by_link_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501


        :return: The new_browser_window_by_link_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigNewBrowserWindowByLinkPolicy
        """
        return self._new_browser_window_by_link_policy

    @new_browser_window_by_link_policy.setter
    def new_browser_window_by_link_policy(self, new_browser_window_by_link_policy):
        """Sets the new_browser_window_by_link_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.


        :param new_browser_window_by_link_policy: The new_browser_window_by_link_policy of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: OneOfapiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigNewBrowserWindowByLinkPolicy
        """

        self._new_browser_window_by_link_policy = new_browser_window_by_link_policy

    @property
    def permitted_processes(self):
        """Gets the permitted_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501


        :return: The permitted_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigPermittedProcesses]
        """
        return self._permitted_processes

    @permitted_processes.setter
    def permitted_processes(self, permitted_processes):
        """Sets the permitted_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.


        :param permitted_processes: The permitted_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigPermittedProcesses]
        """

        self._permitted_processes = permitted_processes

    @property
    def prohibited_processes(self):
        """Gets the prohibited_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501


        :return: The prohibited_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigProhibitedProcesses]
        """
        return self._prohibited_processes

    @prohibited_processes.setter
    def prohibited_processes(self, prohibited_processes):
        """Sets the prohibited_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.


        :param prohibited_processes: The prohibited_processes of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigProhibitedProcesses]
        """

        self._prohibited_processes = prohibited_processes

    @property
    def url_filter_rules(self):
        """Gets the url_filter_rules of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501


        :return: The url_filter_rules of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :rtype: list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigURLFilterRules]
        """
        return self._url_filter_rules

    @url_filter_rules.setter
    def url_filter_rules(self, url_filter_rules):
        """Sets the url_filter_rules of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.


        :param url_filter_rules: The url_filter_rules of this Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig.  # noqa: E501
        :type: list[Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfigURLFilterRules]
        """

        self._url_filter_rules = url_filter_rules

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Apiv2coursescourseIdassignmentsIntegrations1SafeExamBrowserConfig):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
